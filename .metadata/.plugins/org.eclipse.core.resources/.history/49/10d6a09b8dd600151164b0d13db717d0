package roadgraph;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;

import geography.GeographicPoint;

public class MapNode implements Comparable {
	private GeographicPoint location;
	private HashSet<MapEdge> edgeList; // = new ArrayList<>();

	
	
	public MapNode(GeographicPoint location){
		this.location = location;
		edgeList = new HashSet<>();
	}
	
	public GeographicPoint getLocation(){
		return location;
	}
	
	public HashSet<MapEdge> getEdgeList() {
		return edgeList;
	}
	
	public void addEdge(MapEdge newEdge){
		edgeList.add(newEdge);
	}
	
	public void addEdge(GeographicPoint endloc, String street, String roadtype, double distance ){
		MapEdge newEdge = new MapEdge(location,endloc,street,roadtype, distance);
		edgeList.add(newEdge);
	}
	
	public List<GeographicPoint> getNeighbors(){
		List<GeographicPoint> neighbors = new ArrayList<>();
		for(MapEdge e : edgeList){
			neighbors.add(e.getEnd());
		}
		
		
		return neighbors;
	}

	@Override
	public int compareTo(Object arg0) {
		// TODO Auto-generated method stub
		return 0;
	}
	
	
	
	
	//public Set<> getNeighbors
	

}
